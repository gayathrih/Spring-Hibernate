<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<context:annotation-config/>

<context:component-scan base-package="app.aop.service"/>

<aop:aspectj-autoproxy/>


<bean id="loggingAspect" class="app.aop.service.LoggingAspect_1"/>

<aop:config>
   <aop:aspect id="log_Aspect" ref="loggingAspect">
   
     <aop:pointcut expression="execution(public * app.aop.service.StudentService.getName())" 
                   id="allGetName"/>
   
     <aop:before method="logBeforeAdvice"
                pointcut-ref="allGetName"/>
                
      <aop:after method="logAfterAdvice()"
                pointcut-ref="allGetName"/> 
                
       <aop:after-returning method="logAfterReturingAdvice"
                   pointcut-ref="allGetName"/>                  
   </aop:aspect>


</aop:config>




</beans>
